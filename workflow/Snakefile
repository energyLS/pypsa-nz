
#configfile: "config/config.yaml"

localrules: all, report, clean

wildcard_constraints:
    country="[a-zA-Z]+",
    sweep="[a-zA-Z]+",

rule all:
    message: "Run entire analysis and compile report."
    input:
        "report/report.pdf",


rule plot_export:
    output:
        modelenergy = "../results/figures/modelenergy/export_comp.pdf",
    notebook:
        "notebooks/modelenergy.py.ipynb"

rule plot_threshold:
    output:
        threshold_diff = "../results/figures/rule/threshold_diff.pdf",
        threshold_diff_png = "../results/figures/rule/threshold_diff.png",
    notebook:
        "notebooks/threshold_diff.py.ipynb"

rule plot_export_quan:
    params:
        #sweep = ["expansion"] #["year", "rule", "expansion"]
    input:
        nz_goals = "../data/nz_goals/nz_goals.csv",
        edemand = "../data/owid/electricity-demand.csv",
        edemand_incr = "../resources/edemand_incr/edemand_incr.csv",
        reshares = "../data/owid/share-of-electricity-production-from-renewable-sources.csv",
        regrowth_data = "../resources/regrowth/renewable-growth.csv",
    output:
        exportquan = "../results/figures/exportquan/export_quant_{sweep}.pdf",
        exportquan_png = "../results/figures/exportquan/export_quant_{sweep}.png",
    notebook:
        "notebooks/export_quan.py.ipynb"

rule plot_export_quan_all:
    input:
        exportquan = expand("../results/figures/exportquan/export_quant_{sweep}.pdf", sweep=["year", "rule", "expansion"]),

rule plot_reshares:
    input:
        reshares = "../data/owid/share-of-electricity-production-from-renewable-sources.csv",
    output:
        reshares = "../results/figures/reshares/nzl.pdf",
        reshares_png = "../results/figures/reshares/nzl.png",
    notebook:
        "notebooks/re_shares.py.ipynb"

rule get_demand_incr:
    # input:
    #     edemand = "../data/owid/electricity-demand.csv",
    output:
        edemand_incr = "../resources/edemand_incr/edemand_incr.csv",
    notebook:
        "notebooks/dom-demand.py.ipynb"

rule plot_regrowth:
    input:
        reprod = "../data/owid/modern-renewable-prod.csv",
        mbie = "../data/mbie/electricity.xlsx",
        edemand = "../data/owid/electricity-demand.csv",
    output:
        regrowth = "../results/figures/regrowth/nzl.pdf",
        regrowth_png = "../results/figures/regrowth/nzl.png",
        regrowth_data = "../resources/regrowth/renewable-growth.csv",
    notebook:
        "notebooks/re_growth.py.ipynb"


rule paper_figs:
    input:
        modelenergy = "../results/figures/modelenergy/export_comp.pdf",
        exportquan = expand("../results/figures/exportquan/export_quant_{sweep}.pdf", sweep=["year", "rule", "expansion"]),
        reshares = "../results/figures/reshares/nzl.pdf",
        regrowth = "../results/figures/regrowth/nzl.pdf",
        threshold_diff = "../results/figures/rule/threshold_diff.pdf",



# rule report:
#     message: "Compile report."
#     input:
#         tex="report/report.tex",
#         bib="report/references.bib"
#     output: "report/report.pdf"
#     shell:
#         """
#         pdflatex {input.tex}
#         bibtex {input.bib})
#         pdflatex {input.tex}
#         pdflatex {input.tex}
#         """


# rule dag:
#      message: "Plot dependency graph of the workflow."
#      output:
#          dot="resources/dag.dot",
#          pdf="resources/dag.pdf"
#      shell:
#          """
#          snakemake --rulegraph > {output.dot}
#          dot -Tpdf -o {output.pdf} {output.dot}
#          """


# rule clean:
#     message: "Remove all build results but keep downloaded data."
#     run:
#          import shutil

#          shutil.rmtree("resources")
#          shutil.rmtree("results")
#          print("Data downloaded to data/ has not been cleaned.")

        
# rule sync:
#     params:
#         cluster=config["cluster"],
#     shell:
#         """
#         rsync -uvarh --no-g --exclude-from=.syncignore-send . {params.cluster}
#         rsync -uvarh --no-g --exclude-from=.syncignore-receive {params.cluster} .
#         """
